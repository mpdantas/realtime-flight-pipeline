[2025-07-22T18:02:52.037+0000] {local_task_job_runner.py:120} INFO - ::group::Pre task execution logs
[2025-07-22T18:02:52.057+0000] {taskinstance.py:2076} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: flight_data_pipeline.run_spark_job_container manual__2025-07-22T18:02:50.217547+00:00 [queued]>
[2025-07-22T18:02:52.062+0000] {taskinstance.py:2076} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: flight_data_pipeline.run_spark_job_container manual__2025-07-22T18:02:50.217547+00:00 [queued]>
[2025-07-22T18:02:52.063+0000] {taskinstance.py:2306} INFO - Starting attempt 1 of 1
[2025-07-22T18:02:52.075+0000] {taskinstance.py:2330} INFO - Executing <Task(DockerOperator): run_spark_job_container> on 2025-07-22 18:02:50.217547+00:00
[2025-07-22T18:02:52.081+0000] {warnings.py:112} WARNING - /home/***/.local/lib/python3.12/site-packages/***/task/task_runner/standard_task_runner.py:61: DeprecationWarning: This process (pid=1311) is multi-threaded, use of fork() may lead to deadlocks in the child.
  pid = os.fork()

[2025-07-22T18:02:52.083+0000] {standard_task_runner.py:63} INFO - Started process 1313 to run task
[2025-07-22T18:02:52.082+0000] {standard_task_runner.py:90} INFO - Running: ['***', 'tasks', 'run', 'flight_data_pipeline', 'run_spark_job_container', 'manual__2025-07-22T18:02:50.217547+00:00', '--job-id', '40', '--raw', '--subdir', 'DAGS_FOLDER/flight_pipeline_dag.py', '--cfg-path', '/tmp/tmpyewel908']
[2025-07-22T18:02:52.084+0000] {standard_task_runner.py:91} INFO - Job 40: Subtask run_spark_job_container
[2025-07-22T18:02:52.121+0000] {task_command.py:426} INFO - Running <TaskInstance: flight_data_pipeline.run_spark_job_container manual__2025-07-22T18:02:50.217547+00:00 [running]> on host d77a53274a34
[2025-07-22T18:02:52.192+0000] {taskinstance.py:2648} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='***' AIRFLOW_CTX_DAG_ID='flight_data_pipeline' AIRFLOW_CTX_TASK_ID='run_spark_job_container' AIRFLOW_CTX_EXECUTION_DATE='2025-07-22T18:02:50.217547+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2025-07-22T18:02:50.217547+00:00'
[2025-07-22T18:02:52.194+0000] {taskinstance.py:430} INFO - ::endgroup::
[2025-07-22T18:02:52.209+0000] {docker.py:366} INFO - Starting docker container from image realtime-flight-pipeline/spark-job:0.4
[2025-07-22T18:02:52.212+0000] {docker.py:374} WARNING - Using remote engine or docker-in-docker and mounting temporary volume from host is not supported. Falling back to `mount_tmp_dir=False` mode. You can set `mount_tmp_dir` parameter to False to disable mounting and remove the warning
[2025-07-22T18:02:52.444+0000] {docker.py:436} INFO - [38;5;6mspark [38;5;5m18:02:52.44 [0m[38;5;2mINFO [0m ==>
[2025-07-22T18:02:52.445+0000] {docker.py:436} INFO - [38;5;6mspark [38;5;5m18:02:52.44 [0m[38;5;2mINFO [0m ==> [1mWelcome to the Bitnami spark container[0m
[2025-07-22T18:02:52.446+0000] {docker.py:436} INFO - [38;5;6mspark [38;5;5m18:02:52.44 [0m[38;5;2mINFO [0m ==> Subscribe to project updates by watching [1mhttps://github.com/bitnami/containers[0m
[2025-07-22T18:02:52.448+0000] {docker.py:436} INFO - [38;5;6mspark [38;5;5m18:02:52.44 [0m[38;5;2mINFO [0m ==> Submit issues and feature requests at [1mhttps://github.com/bitnami/containers/issues[0m
[2025-07-22T18:02:52.449+0000] {docker.py:436} INFO - [38;5;6mspark [38;5;5m18:02:52.44 [0m[38;5;2mINFO [0m ==> Upgrade to Tanzu Application Catalog for production environments to access custom-configured and pre-packaged software components. Gain enhanced features, including Software Bill of Materials (SBOM), CVE scan result reports, and VEX documents. To learn more, visit [1mhttps://bitnami.com/enterprise[0m
[2025-07-22T18:02:52.450+0000] {docker.py:436} INFO - [38;5;6mspark [38;5;5m18:02:52.44 [0m[38;5;2mINFO [0m ==>
[2025-07-22T18:02:52.459+0000] {docker.py:436} INFO - 
[2025-07-22T18:02:54.743+0000] {docker.py:436} INFO - 25/07/22 18:02:54 INFO SparkContext: Running Spark version 3.5.1
[2025-07-22T18:02:54.744+0000] {docker.py:436} INFO - 25/07/22 18:02:54 INFO SparkContext: OS info Linux, 5.15.167.4-microsoft-standard-WSL2, amd64
[2025-07-22T18:02:54.745+0000] {docker.py:436} INFO - 25/07/22 18:02:54 INFO SparkContext: Java version 17.0.12
[2025-07-22T18:02:54.772+0000] {docker.py:436} INFO - 25/07/22 18:02:54 INFO ResourceUtils: ==============================================================
[2025-07-22T18:02:54.773+0000] {docker.py:436} INFO - 25/07/22 18:02:54 INFO ResourceUtils: No custom resources configured for spark.driver.
[2025-07-22T18:02:54.773+0000] {docker.py:436} INFO - 25/07/22 18:02:54 INFO ResourceUtils: ==============================================================
[2025-07-22T18:02:54.774+0000] {docker.py:436} INFO - 25/07/22 18:02:54 INFO SparkContext: Submitted application: FlightDataProcessing
[2025-07-22T18:02:54.795+0000] {docker.py:436} INFO - 25/07/22 18:02:54 INFO ResourceProfile: Default ResourceProfile created, executor resources: Map(cores -> name: cores, amount: 1, script: , vendor: , memory -> name: memory, amount: 1024, script: , vendor: , offHeap -> name: offHeap, amount: 0, script: , vendor: ), task resources: Map(cpus -> name: cpus, amount: 1.0)
[2025-07-22T18:02:54.802+0000] {docker.py:436} INFO - 25/07/22 18:02:54 INFO ResourceProfile: Limiting resource is cpu
[2025-07-22T18:02:54.804+0000] {docker.py:436} INFO - 25/07/22 18:02:54 INFO ResourceProfileManager: Added ResourceProfile id: 0
[2025-07-22T18:02:54.840+0000] {docker.py:436} INFO - 25/07/22 18:02:54 INFO SecurityManager: Changing view acls to: spark
[2025-07-22T18:02:54.841+0000] {docker.py:436} INFO - 25/07/22 18:02:54 INFO SecurityManager: Changing modify acls to: spark
[2025-07-22T18:02:54.841+0000] {docker.py:436} INFO - 25/07/22 18:02:54 INFO SecurityManager: Changing view acls groups to:
[2025-07-22T18:02:54.841+0000] {docker.py:436} INFO - 25/07/22 18:02:54 INFO SecurityManager: Changing modify acls groups to:
[2025-07-22T18:02:54.842+0000] {docker.py:436} INFO - 25/07/22 18:02:54 INFO SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users with view permissions: spark; groups with view permissions: EMPTY; users with modify permissions: spark; groups with modify permissions: EMPTY
[2025-07-22T18:02:54.883+0000] {docker.py:436} INFO - 25/07/22 18:02:54 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
[2025-07-22T18:02:55.117+0000] {docker.py:436} INFO - 25/07/22 18:02:55 INFO Utils: Successfully started service 'sparkDriver' on port 39371.
[2025-07-22T18:02:55.136+0000] {docker.py:436} INFO - 25/07/22 18:02:55 INFO SparkEnv: Registering MapOutputTracker
[2025-07-22T18:02:55.162+0000] {docker.py:436} INFO - 25/07/22 18:02:55 INFO SparkEnv: Registering BlockManagerMaster
[2025-07-22T18:02:55.174+0000] {docker.py:436} INFO - 25/07/22 18:02:55 INFO BlockManagerMasterEndpoint: Using org.apache.spark.storage.DefaultTopologyMapper for getting topology information
[2025-07-22T18:02:55.175+0000] {docker.py:436} INFO - 25/07/22 18:02:55 INFO BlockManagerMasterEndpoint: BlockManagerMasterEndpoint up
[2025-07-22T18:02:55.178+0000] {docker.py:436} INFO - 25/07/22 18:02:55 INFO SparkEnv: Registering BlockManagerMasterHeartbeat
[2025-07-22T18:02:55.192+0000] {docker.py:436} INFO - 25/07/22 18:02:55 INFO DiskBlockManager: Created local directory at /tmp/blockmgr-011574d0-b532-4458-91ae-9c25e0337ee3
[2025-07-22T18:02:55.203+0000] {docker.py:436} INFO - 25/07/22 18:02:55 INFO MemoryStore: MemoryStore started with capacity 434.4 MiB
[2025-07-22T18:02:55.216+0000] {docker.py:436} INFO - 25/07/22 18:02:55 INFO SparkEnv: Registering OutputCommitCoordinator
[2025-07-22T18:02:55.312+0000] {docker.py:436} INFO - 25/07/22 18:02:55 INFO JettyUtils: Start Jetty 0.0.0.0:4040 for SparkUI
[2025-07-22T18:02:55.355+0000] {docker.py:436} INFO - 25/07/22 18:02:55 INFO Utils: Successfully started service 'SparkUI' on port 4040.
[2025-07-22T18:02:55.449+0000] {docker.py:436} INFO - 25/07/22 18:02:55 INFO Executor: Starting executor ID driver on host 73ba8536290c
[2025-07-22T18:02:55.450+0000] {docker.py:436} INFO - 25/07/22 18:02:55 INFO Executor: OS info Linux, 5.15.167.4-microsoft-standard-WSL2, amd64
[2025-07-22T18:02:55.450+0000] {docker.py:436} INFO - 25/07/22 18:02:55 INFO Executor: Java version 17.0.12
[2025-07-22T18:02:55.456+0000] {docker.py:436} INFO - 25/07/22 18:02:55 INFO Executor: Starting executor with user classpath (userClassPathFirst = false): ''
[2025-07-22T18:02:55.457+0000] {docker.py:436} INFO - 25/07/22 18:02:55 INFO Executor: Created or updated repl class loader org.apache.spark.util.MutableURLClassLoader@175bb9ab for default.
[2025-07-22T18:02:55.473+0000] {docker.py:436} INFO - 25/07/22 18:02:55 INFO Utils: Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port 42743.
[2025-07-22T18:02:55.473+0000] {docker.py:436} INFO - 25/07/22 18:02:55 INFO NettyBlockTransferService: Server created on 73ba8536290c:42743
[2025-07-22T18:02:55.474+0000] {docker.py:436} INFO - 25/07/22 18:02:55 INFO BlockManager: Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy
[2025-07-22T18:02:55.479+0000] {docker.py:436} INFO - 25/07/22 18:02:55 INFO BlockManagerMaster: Registering BlockManager BlockManagerId(driver, 73ba8536290c, 42743, None)
[2025-07-22T18:02:55.482+0000] {docker.py:436} INFO - 25/07/22 18:02:55 INFO BlockManagerMasterEndpoint: Registering block manager 73ba8536290c:42743 with 434.4 MiB RAM, BlockManagerId(driver, 73ba8536290c, 42743, None)
[2025-07-22T18:02:55.484+0000] {docker.py:436} INFO - 25/07/22 18:02:55 INFO BlockManagerMaster: Registered BlockManager BlockManagerId(driver, 73ba8536290c, 42743, None)
[2025-07-22T18:02:55.485+0000] {docker.py:436} INFO - 25/07/22 18:02:55 INFO BlockManager: Initialized BlockManager: BlockManagerId(driver, 73ba8536290c, 42743, None)
[2025-07-22T18:02:55.737+0000] {docker.py:436} INFO - Sessão Spark criada com sucesso!
[2025-07-22T18:02:57.594+0000] {docker.py:436} INFO - 25/07/22 18:02:57 INFO SharedState: Setting hive.metastore.warehouse.dir ('null') to the value of spark.sql.warehouse.dir.
[2025-07-22T18:02:57.600+0000] {docker.py:436} INFO - 25/07/22 18:02:57 INFO SharedState: Warehouse path is 'file:/app/spark-warehouse'.
[2025-07-22T18:02:58.630+0000] {docker.py:436} INFO - Iniciando escrita dos dados no PostgreSQL...
[2025-07-22T18:02:59.006+0000] {docker.py:436} INFO - Traceback (most recent call last):
  File "/app/process_flights.py", line 135, in <module>
[2025-07-22T18:02:59.007+0000] {docker.py:436} INFO - main()
[2025-07-22T18:02:59.007+0000] {docker.py:436} INFO - File "/app/process_flights.py", line 118, in main
[2025-07-22T18:02:59.007+0000] {docker.py:436} INFO - df_to_write.write.jdbc(
  File "/opt/bitnami/spark/python/lib/pyspark.zip/pyspark/sql/readwriter.py", line 1984, in jdbc
[2025-07-22T18:02:59.008+0000] {docker.py:436} INFO - File "/opt/bitnami/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/java_gateway.py", line 1322, in __call__
[2025-07-22T18:02:59.008+0000] {docker.py:436} INFO - File "/opt/bitnami/spark/python/lib/pyspark.zip/pyspark/errors/exceptions/captured.py", line 179, in deco
[2025-07-22T18:02:59.009+0000] {docker.py:436} INFO - File "/opt/bitnami/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/protocol.py", line 326, in get_return_value
[2025-07-22T18:02:59.009+0000] {docker.py:436} INFO - py4j.protocol.Py4JJavaError
[2025-07-22T18:02:59.009+0000] {docker.py:436} INFO - : An error occurred while calling o70.jdbc.
: java.lang.ClassNotFoundException: org.postgresql.Driver
	at java.base/java.net.URLClassLoader.findClass(URLClassLoader.java:445)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:592)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)
	at org.apache.spark.sql.execution.datasources.jdbc.DriverRegistry$.register(DriverRegistry.scala:46)
	at org.apache.spark.sql.execution.datasources.jdbc.JDBCOptions.$anonfun$driverClass$1(JDBCOptions.scala:103)
	at org.apache.spark.sql.execution.datasources.jdbc.JDBCOptions.$anonfun$driverClass$1$adapted(JDBCOptions.scala:103)
	at scala.Option.foreach(Option.scala:407)
	at org.apache.spark.sql.execution.datasources.jdbc.JDBCOptions.<init>(JDBCOptions.scala:103)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcOptionsInWrite.<init>(JDBCOptions.scala:254)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcOptionsInWrite.<init>(JDBCOptions.scala:258)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcRelationProvider.createRelation(JdbcRelationProvider.scala:47)
	at org.apache.spark.sql.execution.datasources.SaveIntoDataSourceCommand.run(SaveIntoDataSourceCommand.scala:48)
	at org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult$lzycompute(commands.scala:75)
	at org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult(commands.scala:73)
	at org.apache.spark.sql.execution.command.ExecutedCommandExec.executeCollect(commands.scala:84)
	at org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.$anonfun$applyOrElse$1(QueryExecution.scala:107)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$6(SQLExecution.scala:125)
	at org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:201)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$1(SQLExecution.scala:108)
	at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:900)
	at org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:66)
	at org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.applyOrElse(QueryExecution.scala:107)
	at org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.applyOrElse(QueryExecution.scala:98)
	at org.apache.spark.sql.catalyst.trees.TreeNode.$anonfun$transformDownWithPruning$1(TreeNode.scala:461)
	at org.apache.spark.sql.catalyst.trees.CurrentOrigin$.withOrigin(origin.scala:76)
	at org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning(TreeNode.scala:461)
	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.org$apache$spark$sql$catalyst$plans$logical$AnalysisHelper$$super$transformDownWithPruning(LogicalPlan.scala:32)
	at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning(AnalysisHelper.scala:267)
	at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning$(AnalysisHelper.scala:263)
	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:32)
	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:32)
	at org.apache.spark.sql.catalyst.trees.TreeNode.transformDown(TreeNode.scala:437)
	at org.apache.spark.sql.execution.QueryExecution.eagerlyExecuteCommands(QueryExecution.scala:98)
	at org.apache.spark.sql.execution.QueryExecution.commandExecuted$lzycompute(QueryExecution.scala:85)
	at org.apache.spark.sql.execution.QueryExecution.commandExecuted(QueryExecution.scala:83)
	at org.apache.spark.sql.execution.QueryExecution.assertCommandExecuted(QueryExecution.scala:142)
	at org.apache.spark.sql.DataFrameWriter.runCommand(DataFrameWriter.scala:859)
	at org.apache.spark.sql.DataFrameWriter.saveToV1Source(DataFrameWriter.scala:388)
	at org.apache.spark.sql.DataFrameWriter.saveInternal(DataFrameWriter.scala:361)
	at org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:248)
	at org.apache.spark.sql.DataFrameWriter.jdbc(DataFrameWriter.scala:756)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)
	at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)
	at py4j.Gateway.invoke(Gateway.java:282)
	at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)
	at py4j.commands.CallCommand.execute(CallCommand.java:79)
	at py4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)
	at py4j.ClientServerConnection.run(ClientServerConnection.java:106)
	at java.base/java.lang.Thread.run(Thread.java:840)
[2025-07-22T18:02:59.062+0000] {docker.py:436} INFO - 25/07/22 18:02:59 INFO SparkContext: Invoking stop() from shutdown hook
[2025-07-22T18:02:59.063+0000] {docker.py:436} INFO - 25/07/22 18:02:59 INFO SparkContext: SparkContext is stopping with exitCode 0.
[2025-07-22T18:02:59.072+0000] {docker.py:436} INFO - 25/07/22 18:02:59 INFO SparkUI: Stopped Spark web UI at http://73ba8536290c:4040
[2025-07-22T18:02:59.080+0000] {docker.py:436} INFO - 25/07/22 18:02:59 INFO MapOutputTrackerMasterEndpoint: MapOutputTrackerMasterEndpoint stopped!
[2025-07-22T18:02:59.092+0000] {docker.py:436} INFO - 25/07/22 18:02:59 INFO MemoryStore: MemoryStore cleared
[2025-07-22T18:02:59.092+0000] {docker.py:436} INFO - 25/07/22 18:02:59 INFO BlockManager: BlockManager stopped
[2025-07-22T18:02:59.096+0000] {docker.py:436} INFO - 25/07/22 18:02:59 INFO BlockManagerMaster: BlockManagerMaster stopped
[2025-07-22T18:02:59.098+0000] {docker.py:436} INFO - 25/07/22 18:02:59 INFO OutputCommitCoordinator$OutputCommitCoordinatorEndpoint: OutputCommitCoordinator stopped!
[2025-07-22T18:02:59.106+0000] {docker.py:436} INFO - 25/07/22 18:02:59 INFO SparkContext: Successfully stopped SparkContext
[2025-07-22T18:02:59.107+0000] {docker.py:436} INFO - 25/07/22 18:02:59 INFO ShutdownHookManager: Shutdown hook called
[2025-07-22T18:02:59.107+0000] {docker.py:436} INFO - 25/07/22 18:02:59 INFO ShutdownHookManager: Deleting directory /tmp/spark-e7a1d7ee-ead9-4808-b2b4-69d2cc240619
[2025-07-22T18:02:59.111+0000] {docker.py:436} INFO - 25/07/22 18:02:59 INFO ShutdownHookManager: Deleting directory /tmp/spark-e7a1d7ee-ead9-4808-b2b4-69d2cc240619/pyspark-f4f6f189-6fca-420d-926f-e374aae6d949
[2025-07-22T18:02:59.114+0000] {docker.py:436} INFO - 25/07/22 18:02:59 INFO ShutdownHookManager: Deleting directory /tmp/spark-c1488516-9eab-4d93-81d6-caa67571b187
[2025-07-22T18:02:59.533+0000] {taskinstance.py:441} INFO - ::group::Post task execution logs
[2025-07-22T18:02:59.542+0000] {taskinstance.py:2905} ERROR - Task failed with exception
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.12/site-packages/docker/api/client.py", line 275, in _raise_for_status
    response.raise_for_status()
  File "/home/airflow/.local/lib/python3.12/site-packages/requests/models.py", line 1021, in raise_for_status
    raise HTTPError(http_error_msg, response=self)
requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: http+docker://localhost/v1.49/containers/create

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/docker/operators/docker.py", line 371, in _run_image
    return self._run_image_with_mounts([*self.mounts, tmp_mount], add_tmp_variable=True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/docker/operators/docker.py", line 398, in _run_image_with_mounts
    self.container = self.cli.create_container(
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/docker/api/container.py", line 440, in create_container
    return self.create_container_from_config(config, name, platform)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/docker/api/container.py", line 457, in create_container_from_config
    return self._result(res, True)
           ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/docker/api/client.py", line 281, in _result
    self._raise_for_status(response)
  File "/home/airflow/.local/lib/python3.12/site-packages/docker/api/client.py", line 277, in _raise_for_status
    raise create_api_error_from_http_exception(e) from e
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/docker/errors.py", line 39, in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation) from e
docker.errors.APIError: 400 Client Error for http+docker://localhost/v1.49/containers/create: Bad Request ("invalid mount config for type "bind": bind source path does not exist: /tmp/airflowtmpj487rues")

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/taskinstance.py", line 465, in _execute_task
    result = _execute_callable(context=context, **execute_callable_kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/taskinstance.py", line 432, in _execute_callable
    return execute_callable(context=context, **execute_callable_kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/baseoperator.py", line 401, in wrapper
    return func(self, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/docker/operators/docker.py", line 509, in execute
    return self._run_image()
           ^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/docker/operators/docker.py", line 380, in _run_image
    return self._run_image_with_mounts(self.mounts, add_tmp_variable=False)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/docker/operators/docker.py", line 444, in _run_image_with_mounts
    raise DockerContainerFailedException(f"Docker container failed: {result!r}", logs=log_lines)
airflow.providers.docker.exceptions.DockerContainerFailedException: Docker container failed: {'StatusCode': 1}
[2025-07-22T18:02:59.548+0000] {taskinstance.py:1206} INFO - Marking task as FAILED. dag_id=flight_data_pipeline, task_id=run_spark_job_container, run_id=manual__2025-07-22T18:02:50.217547+00:00, execution_date=20250722T180250, start_date=20250722T180252, end_date=20250722T180259
[2025-07-22T18:02:59.561+0000] {standard_task_runner.py:110} ERROR - Failed to execute job 40 for task run_spark_job_container (Docker container failed: {'StatusCode': 1}; 1313)
[2025-07-22T18:02:59.594+0000] {local_task_job_runner.py:240} INFO - Task exited with return code 1
[2025-07-22T18:02:59.608+0000] {taskinstance.py:3503} INFO - 0 downstream tasks scheduled from follow-on schedule check
[2025-07-22T18:02:59.610+0000] {local_task_job_runner.py:222} INFO - ::endgroup::
